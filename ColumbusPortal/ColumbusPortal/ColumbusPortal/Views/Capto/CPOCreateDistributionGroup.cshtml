@model ColumbusPortal.Models.CaptoModel
@{
    ViewBag.Title = "Capto > Mail > Create DistributionGroup";
}
@section script {
    <script>
        $(document).ready(function() {
            $("select[name=organization]").change(function () {
                CPOGetAcceptedDomain();
                CPOGetMailbox("UserMailbox");
            });

            CPOGetAcceptedDomain();
            CPOGetMailbox("UserMailbox");
        });
    </script>
}

<h1 class="title">@ViewBag.Title</h1>
<p>Use this form create a new distributiongroup.</p>

@using (Html.BeginForm("CPOCreateDistributionGroup", "Capto"))
{
    <fieldset>
        <legend>Create Distribution Group</legend>
        <table>
            <tr>
                <td colspan="2">
                    <div id="messageDiv">
                        @if (Model.Message != null)
                        {
                            <div class="message">@Model.Message <p><small><a href="javascript:ClearErrors()">Clear errors</a></small></p></div>
                        }
                    </div>
                    <div id="okMessageDiv">
                        @if (Model.OKMessage.Count > 0)
                        {
                            <div class="okmessage">
                                @foreach (string msg in Model.OKMessage)
                                {
                                    <p>@msg</p>
                                }
                                <p><small><a href="javascript:ClearMessages()">Clear messages</a></small></p>
                            </div>
                        }
                    </div>
                </td>
            </tr>

            <tr>
                <td class="lefttd">Organization</td>
                <td class="middletd">
                    <select name="organization">
                        @foreach (string organization in Model.CPOOrganizations)
                        {
                            <option @if (Model.ActionFailed) { if (organization == Model.CPODistributionGroup.Organization) { @: selected="selected"
                                                                                                                                            } }>
                                @organization
                            </option>
                        }
                    </select>
                </td>
            </tr>
            <tr>
                <td class="lefttd">Accepted emaildomains:</td>
                <td class="middletd">
                    <div id="acceptedDomain"></div>
                </td>
            </tr>
            <tr>
                <td class="lefttd">Group manager</td>
                <td class="middletd">
                    <select name="userprincipalname"><option>loading...</option></select>
                </td>
            </tr>
            <tr>
                <td class="lefttd">Group name</td>
                <td class="middletd">
                    <input name="name" placeholder="Den Gode Gruppe" @if (Model.ActionFailed) { @: value="@Model.CPODistributionGroup.Name"
                                                                                                              } />
                </td>
            </tr>
            <tr>
                <td class="lefttd">Group email address</td>
                <td class="middletd">
                    <input name="primarysmtpaddress" placeholder="dgg@example.com" @if (Model.ActionFailed) { @: value="@Model.CPODistributionGroup.UserPrincipalName"
                                                                                                              } />
                </td>
            </tr>
            <tr>
                <td class="lefttd">Can receive external e-mail</td>
                <td class="middletd">
                    <input name="allowexternalemails" id="allowexternalemails" type="checkbox" class="cbx hidden" @if (Model.ActionFailed) { if (!Model.CPODistributionGroup.RequireSenderAuthentication) { @: checked
                                                                                           } } /><label for="allowexternalemails" class="lbl"></label>
                </td>
            </tr>
        </table>
        <br />
        <input type="submit" class="button" class:hover="button:hover" value="Create Group" id="buttonSubmit" onclick="buttonSubmit.disabled = true; ClearMessages(); ClearErrors(); StartSubmitButtonMessage(); this.form.submit()" />
    </fieldset>
}